@page

@using ExpertPriceCrawler
@model IndexModel
@{
    ViewData["Title"] = "Expert Price Crawler";
}

@{
    List<Result> data = null;
    if (HttpContext.Request.Query.TryGetValue("productUrl", out var url))
    {
        var uri = new Uri(url);
        data = await ExpertPriceCrawler.Crawler.CollectPrices(uri);
    }
}

<script>
    function addSpinner(){
        const productUrl = document.getElementById("productUrl").value;
        document.body.classList.add("loading");

        const statusLogNode = document.getElementById("statuslog");
        const statusTextNode = document.createElement("div");
        statusTextNode.innerText = `Crawling prices for ${productUrl}`;
        statusLogNode.appendChild(statusTextNode);

        const statusUrl = `/api/status/?uri=${encodeURIComponent(productUrl)}`
        const interval = setInterval(() => {
            fetch(statusUrl, {
                method: "GET",
                headers: {
                    "Content-Type": "application/json"
                }
            })
                .then(response => response.text())
                .then(status => {
                    console.log(status);

                    const statusTextNode = document.createElement("div");
                    statusTextNode.innerText = `${(new Date()).toLocaleTimeString()} ${status}`;
                    statusLogNode.appendChild(statusTextNode);
                    statusLogNode.scrollTop = Number.MAX_SAFE_INTEGER
                }, error => {
                    clearInterval(interval);
                });
        }, 5000);
    }
</script>

<div class="text-center">
    <h1 class="display-4">Expert Price Crawler</h1>

    @if (data is null)
    {
        <form action="/" method="get" onsubmit="addSpinner()">
            <div class="form-group">
                <label for="productUrl">
                    Expert Produkt Url
                </label>
                <input id="productUrl" class="form-control" type="text" pattern="https:\/\/www\.expert\.de\/.*" name="productUrl" required />
            </div>
            <div class="form-group">
                <button class="btn btn-primary" type="submit">Günstigsten Preis suchen</button>
            </div>
        </form>
        <div id="statuslog"></div>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Filial-ID</th>
                    <th>Filiale</th>
                    <th>Preis</th>
                    <th>Link</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entry in data.OrderBy(x => x.PriceDecimal))
                {
                    <tr>
                        <td>@entry.BranchId</td>
                        <td>@entry.BranchName</td>
                        <td>@entry.Price</td>
                        <td>
                            @if (!string.IsNullOrEmpty(entry.Url))
                            {
                                <a href="@entry.Url" target="_blank" rel="noreferrer">Zum Shop</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
